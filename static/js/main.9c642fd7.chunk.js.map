{"version":3,"sources":["components/UploadArea.tsx","components/CritiqueControls.tsx","components/CritiqueOutput.tsx","App.tsx","hooks/useCritique.ts","reportWebVitals.ts","index.tsx"],"names":["UploadArea","_ref","onUpload","React","createElement","type","accept","onChange","e","target","files","CritiqueControls","onCritique","loading","style","marginTop","onClick","disabled","padding","fontSize","fontWeight","backgroundColor","color","border","borderRadius","cursor","CritiqueOutput","critique","className","App","file","setFile","useState","previewURL","setPreviewURL","generateCritique","setLoading","setCritique","async","formData","FormData","append","res","fetch","method","body","data","json","err","console","error","useCritique","maxWidth","margin","fontFamily","marginBottom","newFile","reader","FileReader","onloadend","result","readAsDataURL","Fragment","src","alt","height","handleCritique","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9c642fd7.chunk.js","sourcesContent":["import React from \"react\";\n\ntype Props = {\n  onUpload: (file: File) => void;\n};\n\nconst UploadArea: React.FC<Props> = ({ onUpload }) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      onUpload(e.target.files[0]);\n    }\n  };\n\n  return (\n    <div>\n      <label>\n        <strong>Select an image:</strong>\n        <input type=\"file\" accept=\"image/*\" onChange={handleChange} />\n      </label>\n    </div>\n  );\n};\n\nexport default UploadArea;\n","import React from \"react\";\n\ninterface Props {\n  onCritique: () => void;\n  loading: boolean;\n}\n\nconst CritiqueControls: React.FC<Props> = ({ onCritique, loading }) => {\n  return (\n    <div style={{ marginTop: \"1.5rem\" }}>\n      <button\n        onClick={onCritique}\n        disabled={loading}\n        style={{\n          padding: \"0.5rem 1rem\",\n          fontSize: \"1rem\",\n          fontWeight: \"bold\",\n          backgroundColor: loading ? \"#aaa\" : \"#2563eb\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"0.375rem\",\n          cursor: loading ? \"not-allowed\" : \"pointer\",\n        }}\n      >\n        {loading ? \"Analyzing...\" : \"Critique\"}\n      </button>\n    </div>\n  );\n};\n\nexport default CritiqueControls;\n","import React from \"react\";\n\ntype Props = {\n  critique: string | null;\n};\n\nconst CritiqueOutput: React.FC<Props> = ({ critique }) => {\n  if (!critique) return null;\n\n  return (\n    <div className=\"mt-8\">\n      <div className=\"overflow-hidden rounded-lg bg-white shadow-lg ring-1 ring-gray-200\">\n        <div className=\"p-6 space-y-3\">\n          <h2 className=\"text-xl font-semibold text-gray-800\">Critique</h2>\n          <p className=\"text-gray-600 leading-relaxed whitespace-pre-line\">{critique}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CritiqueOutput;\n","import React, { useState } from \"react\";\nimport UploadArea from \"./components/UploadArea\";\nimport CritiqueControls from \"./components/CritiqueControls\";\nimport CritiqueOutput from \"./components/CritiqueOutput\";\nimport { useCritique } from \"./hooks/useCritique\";\n\nfunction App() {\n  const [file, setFile] = useState<File | null>(null);\n  const [previewURL, setPreviewURL] = useState<string | null>(null);\n  const { critique, loading, generateCritique } = useCritique();\n\n  const handleUpload = (newFile: File) => {\n    setFile(newFile);\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreviewURL(reader.result as string);\n    };\n    reader.readAsDataURL(newFile);\n  };\n\n  const handleCritique = () => {\n    if (file) generateCritique(file);\n  };\n\n  return (\n    <main style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: \"2rem\", fontFamily: \"sans-serif\" }}>\n      <h1 style={{ fontSize: \"2rem\", fontWeight: \"bold\", color: \"#2563eb\", marginBottom: \"1rem\" }}>\n        AI Art Critic\n      </h1>\n\n      <UploadArea onUpload={handleUpload} />\n\n      {previewURL && (\n        <>\n          <div style={{ marginTop: \"1.5rem\" }}>\n            <h2 style={{ fontSize: \"1.125rem\", fontWeight: \"600\", marginBottom: \"0.5rem\" }}>Preview</h2>\n            <img\n              src={previewURL}\n              alt=\"Uploaded artwork\"\n              style={{ borderRadius: \"0.5rem\", maxWidth: \"100%\", height: \"auto\" }}\n            />\n          </div>\n\n          <CritiqueControls onCritique={handleCritique} loading={loading} />\n        </>\n      )}\n\n      <CritiqueOutput critique={critique} />\n    </main>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nexport function useCritique() {\n  const [loading, setLoading] = useState(false);\n  const [critique, setCritique] = useState<string | null>(null);\n\n  const generateCritique = async (file: File) => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    setLoading(true);\n    setCritique(null);\n\n    try {\n      const res = await fetch(\"http://localhost:8000/critique\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await res.json();\n      setCritique(data.critique || \"No critique returned.\");\n    } catch (err) {\n      setCritique(\"An error occurred while generating the critique.\");\n      console.error(err);\n    }\n\n    setLoading(false);\n  };\n\n  return { loading, critique, generateCritique };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}